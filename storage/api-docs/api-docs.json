{
    "openapi": "3.0.0",
    "info": {
        "title": "Hospital API",
        "description": "API Documentation for Doctor Appointment System",
        "contact": {
            "email": "test@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://role.test/api",
            "description": "Doctor Appointment API Server"
        }
    ],
    "paths": {
        "/patients": {
            "post": {
                "tags": [
                    "Patient"
                ],
                "summary": "Create a new patient",
                "operationId": "90ef8c219d41f3610d436dea5425c0d2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "address",
                                    "number",
                                    "age",
                                    "birth_date",
                                    "gender"
                                ],
                                "properties": {
                                    "address": {
                                        "type": "string",
                                        "example": "pkr"
                                    },
                                    "number": {
                                        "type": "integer",
                                        "example": 122
                                    },
                                    "age": {
                                        "type": "integer",
                                        "example": 22
                                    },
                                    "birth_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2020-01-02"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "others"
                                        ],
                                        "example": "male"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized patient"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/patients/{id}": {
            "put": {
                "tags": [
                    "Patient"
                ],
                "summary": "Update patient details",
                "operationId": "e811f8c98fabb93c2f283c24131aadfb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the patient",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "address",
                                    "number",
                                    "age",
                                    "birth_date",
                                    "gender"
                                ],
                                "properties": {
                                    "address": {
                                        "type": "string",
                                        "example": "pkr"
                                    },
                                    "number": {
                                        "type": "string",
                                        "example": "122"
                                    },
                                    "age": {
                                        "type": "integer",
                                        "example": 22
                                    },
                                    "birth_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2020-01-02"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "others"
                                        ],
                                        "example": "male"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Patient"
                ],
                "summary": "Cancel an appointment",
                "operationId": "70d8ca454445645a93499bdcc9ea215b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the appointment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment canceled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Appointment canceled successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                }
            }
        },
        "/login": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Display the login view",
                "operationId": "d38b0625602ec8e41c3bb98aa2e969de",
                "responses": {
                    "200": {
                        "description": "Login view displayed"
                    }
                }
            },
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Handle authentication request",
                "description": "Handle an incoming authentication request.",
                "operationId": "42f77e072dec84b0e1094cca1228298e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Redirects to the appropriate dashboard based on user role"
                    },
                    "401": {
                        "description": "Authentication failed"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Destroy an authenticated session",
                "description": "Destroy an authenticated session.",
                "operationId": "03afb12b342c2ea43bdc1de4f39e91a8",
                "responses": {
                    "302": {
                        "description": "Redirects to the homepage after logout"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Register a user by providing their name, email, role, and password.",
                "operationId": "3c12ec58df2b0cab255444cbb7ad39d3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "role",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "patient"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Created Successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "patient"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-08-26T12:34:56.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-08-26T12:34:56.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Patient": {
                "title": "Patient",
                "required": [
                    "address",
                    "number",
                    "age",
                    "birth_date",
                    "gender"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "address": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "age": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter your bearer token in the format: `Bearer {token}`",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Patient",
            "description": "Patient"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Auth",
            "description": "Auth"
        }
    ]
}